@page
@model LaborVolumeCalculator.Pages.Labors.CreateModel
@using LaborVolumeCalculator.Models.Dictionary

@{
    ViewData["Title"] = "Создать";
}

<h1>Создать</h1>

<h4>@Html.DisplayNameFor(model => model.Labor)</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Labor.Code" class="control-label"></label>
                <input asp-for="Labor.Code" class="form-control" />
                <span asp-validation-for="Labor.Code" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Labor.Name" class="control-label"></label>
                <input asp-for="Labor.Name" class="form-control" />
                <span asp-validation-for="Labor.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Labor.LaborGroup" class="control-label"></label>
                <input asp-for="Labor.LaborGroupId" class="form-control" hidden value="@Model.LaborGroup?.ID" />
                <h4>
                    @LaborGroup.ToString(Model.LaborGroup)
                </h4>
            </div>
            <div class="form-group">
                <input type="submit" value="Создать" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="../LaborGroups/Index" asp-route-parentGroupId="@Model.LaborGroup.ID">Вернуться к списку</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
